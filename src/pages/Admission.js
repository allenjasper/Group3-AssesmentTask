import React, { useState } from "react";
import { jsPDF } from "jspdf";

function Admission() {
  const [formData, setFormData] = useState({
    fullName: "",
    email: "",
    phone: "",
    address: "",
    course: "BSIT",
    studentType: "freshman",
    birthDate: "",
    gender: ""
  });

  const [errors, setErrors] = useState({});

  const programs = [
    "BSIT - Bachelor of Science in Information Technology",
    "BSEd - Bachelor of Secondary Education", 
    "BSBA - Bachelor of Science in Business Administration",
    "BSCS - Bachelor of Science in Computer Science",
    "BEED - Bachelor of Elementary Education",
    "BSAC - Bachelor of Science in Accountancy"
  ];

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
    
    // Clear error when user starts typing
    if (errors[name]) {
      setErrors({ ...errors, [name]: "" });
    }
  };

  const validateForm = () => {
    const newErrors = {};
    
    if (!formData.fullName.trim()) newErrors.fullName = "Full name is required";
    if (!formData.email.trim()) newErrors.email = "Email is required";
    if (!formData.phone.trim()) newErrors.phone = "Phone number is required";
    if (!formData.address.trim()) newErrors.address = "Address is required";
    if (!formData.birthDate) newErrors.birthDate = "Birth date is required";
    if (!formData.gender) newErrors.gender = "Gender is required";
    
    // Email validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (formData.email && !emailRegex.test(formData.email)) {
      newErrors.email = "Please enter a valid email address";
    }
    
    // Phone validation (basic)
    const phoneRegex = /^[0-9+\-\s()]+$/;
    if (formData.phone && !phoneRegex.test(formData.phone)) {
      newErrors.phone = "Please enter a valid phone number";
    }
    
    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    
    if (!validateForm()) {
      return;
    }

    const doc = new jsPDF();

    // Header with logo
    doc.addImage("/pnc-logo.png", "PNG", 15, 10, 25, 25);
    doc.setFontSize(16);
    doc.setFont("helvetica", "bold");
    doc.text("Pamantasan ng Cabuyao", 50, 20);
    doc.setFontSize(14);
    doc.setFont("helvetica", "normal");
    doc.text("Admission Application Form", 50, 30);
    doc.line(15, 35, 195, 35);

    // Personal Information
    doc.setFontSize(12);
    doc.setFont("helvetica", "bold");
    doc.text("PERSONAL INFORMATION", 20, 50);
    doc.setFont("helvetica", "normal");
    doc.text(`Full Name: ${formData.fullName}`, 20, 60);
    doc.text(`Email: ${formData.email}`, 20, 70);
    doc.text(`Phone: ${formData.phone}`, 20, 80);
    doc.text(`Address: ${formData.address}`, 20, 90);
    doc.text(`Birth Date: ${formData.birthDate}`, 20, 100);
    doc.text(`Gender: ${formData.gender}`, 20, 110);

    // Academic Information
    doc.setFont("helvetica", "bold");
    doc.text("ACADEMIC INFORMATION", 20, 130);
    doc.setFont("helvetica", "normal");
    doc.text(`Preferred Course: ${formData.course}`, 20, 140);
    doc.text(`Student Type: ${formData.studentType}`, 20, 150);

    // Footer
    doc.setFontSize(10);
    doc.text("Generated by PnC Admission Portal", 20, 280);
    doc.text(`Date Generated: ${new Date().toLocaleDateString()}`, 20, 285);

    doc.save(`${formData.fullName.replace(/\s+/g, '_')}_admission_form.pdf`);
    
    // Show success message
    alert("Application submitted successfully! Your admission form has been downloaded.");
  };

  return (
    <div className="container py-5">
      <h1 className="fw-bold text-success text-center mb-4">Admission</h1>

      <div className="row">
        {/* Requirements Section */}
        <div className="col-lg-4 mb-4">
          <div className="card shadow-sm h-100">
            <div className="card-header bg-success text-white">
              <h4 className="mb-0">Requirements</h4>
            </div>
            <div className="card-body">
              <h6 className="text-success">For Freshmen:</h6>
              <ul className="mb-3">
                <li>High School Report Card (Form 138)</li>
                <li>Birth Certificate (PSA)</li>
                <li>Good Moral Certificate</li>
                <li>Medical Certificate</li>
                <li>2x2 ID Pictures (4 pieces)</li>
              </ul>
              
              <h6 className="text-success">For Transferees:</h6>
              <ul>
                <li>Certificate of Transfer Credential</li>
                <li>Official Transcript of Records</li>
                <li>Certificate of Good Moral Character</li>
                <li>Birth Certificate (PSA)</li>
                <li>2x2 ID Pictures (4 pieces)</li>
              </ul>
            </div>
          </div>
        </div>

        {/* Application Process */}
        <div className="col-lg-4 mb-4">
          <div className="card shadow-sm h-100">
            <div className="card-header bg-success text-white">
              <h4 className="mb-0">Application Process</h4>
            </div>
            <div className="card-body">
              <ol>
                <li className="mb-2">Fill out the online application form</li>
                <li className="mb-2">Submit required documents</li>
                <li className="mb-2">Take the entrance examination</li>
                <li className="mb-2">Attend the interview (if required)</li>
                <li className="mb-2">Wait for admission results</li>
                <li className="mb-2">Complete enrollment process</li>
              </ol>
              
              <div className="alert alert-info mt-3">
                <small>
                  <strong>Note:</strong> Application period is typically from March to July for the upcoming school year.
                </small>
              </div>
            </div>
          </div>
        </div>

        {/* Application Form */}
        <div className="col-lg-4">
          <div className="card shadow-sm">
            <div className="card-header bg-success text-white">
              <h4 className="mb-0">Apply Now</h4>
            </div>
            <div className="card-body">
              <form onSubmit={handleSubmit}>
                <div className="mb-3">
                  <label className="form-label">Full Name *</label>
                  <input
                    type="text"
                    name="fullName"
                    value={formData.fullName}
                    onChange={handleChange}
                    className={`form-control ${errors.fullName ? 'is-invalid' : ''}`}
                    placeholder="Juan Dela Cruz"
                  />
                  {errors.fullName && <div className="invalid-feedback">{errors.fullName}</div>}
                </div>

                <div className="mb-3">
                  <label className="form-label">Email *</label>
                  <input
                    type="email"
                    name="email"
                    value={formData.email}
                    onChange={handleChange}
                    className={`form-control ${errors.email ? 'is-invalid' : ''}`}
                    placeholder="example@email.com"
                  />
                  {errors.email && <div className="invalid-feedback">{errors.email}</div>}
                </div>

                <div className="mb-3">
                  <label className="form-label">Phone Number *</label>
                  <input
                    type="tel"
                    name="phone"
                    value={formData.phone}
                    onChange={handleChange}
                    className={`form-control ${errors.phone ? 'is-invalid' : ''}`}
                    placeholder="09123456789"
                  />
                  {errors.phone && <div className="invalid-feedback">{errors.phone}</div>}
                </div>

                <div className="mb-3">
                  <label className="form-label">Address *</label>
                  <textarea
                    name="address"
                    value={formData.address}
                    onChange={handleChange}
                    className={`form-control ${errors.address ? 'is-invalid' : ''}`}
                    rows="2"
                    placeholder="Complete Address"
                  />
                  {errors.address && <div className="invalid-feedback">{errors.address}</div>}
                </div>

                <div className="mb-3">
                  <label className="form-label">Birth Date *</label>
                  <input
                    type="date"
                    name="birthDate"
                    value={formData.birthDate}
                    onChange={handleChange}
                    className={`form-control ${errors.birthDate ? 'is-invalid' : ''}`}
                  />
                  {errors.birthDate && <div className="invalid-feedback">{errors.birthDate}</div>}
                </div>

                <div className="mb-3">
                  <label className="form-label">Gender *</label>
                  <select
                    name="gender"
                    value={formData.gender}
                    onChange={handleChange}
                    className={`form-select ${errors.gender ? 'is-invalid' : ''}`}
                  >
                    <option value="">Select Gender</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                    <option value="Other">Other</option>
                  </select>
                  {errors.gender && <div className="invalid-feedback">{errors.gender}</div>}
                </div>

                <div className="mb-3">
                  <label className="form-label">Preferred Course</label>
                  <select
                    name="course"
                    value={formData.course}
                    onChange={handleChange}
                    className="form-select"
                  >
                    {programs.map((program, index) => (
                      <option key={index} value={program.split(' - ')[0]}>
                        {program}
                      </option>
                    ))}
                  </select>
                </div>

                <div className="mb-3">
                  <label className="form-label">Student Type</label>
                  <select
                    name="studentType"
                    value={formData.studentType}
                    onChange={handleChange}
                    className="form-select"
                  >
                    <option value="freshman">Freshman</option>
                    <option value="transferee">Transferee</option>
                  </select>
                </div>

                <button type="submit" className="btn btn-success w-100">
                  Submit Application & Download PDF
                </button>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default Admission;
